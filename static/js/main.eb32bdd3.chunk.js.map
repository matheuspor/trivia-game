{"version":3,"sources":["pages/Game.js","components/select.js","context/SettingsContext.js","services/apiHelper.js","pages/Settings.js","pages/Feedback.js","pages/Ranking.js","actions/index.js","trivia.png","components/PageButton.jsx","components/PageInput.jsx","theme.js","pages/Login.js","context/SettingsProvider.js","App.js","reducers/user.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["Game","props","state","clicked","timer","questionNumber","PlayerScore","PlayerAssertions","handleClick","bind","setTimer","this","updateLocalStorage","playerInfo","JSON","parse","localStorage","getItem","player","name","score","picture","getRanking","setItem","stringify","target","difficulty","questions","obj","easy","medium","hard","setState","prevstate","countdown","setInterval","prevState","clearInterval","localStorageObj","assertions","gravatarEmail","email","avatar","classes","allQuestions","correct_answer","incorrect_answers","sort","ButtonGroup","orientation","variant","sx","textAlign","pb","maxWidth","color","map","question","index","Button","type","onClick","disabled","id","className","disabledGreen","decodeURIComponent","disabledRed","history","length","push","Box","position","display","top","left","bottom","right","alignItems","justifyContent","fontSize","CircularProgress","value","size","thickness","Typography","fontWeight","component","Container","CssBaseline","marginTop","flexDirection","Avatar","height","width","src","alt","circularProgressWithLabel","Paper","xs","my","md","p","elevation","category","pt","gutterBottom","randomAnswers","alignSelf","nextButton","React","Component","connect","user","withStyles","borderColor","border","background","makeSelect","values","handler","TextField","onChange","select","label","toUpperCase","substr","minWidth","MenuItem","trivia_categories","toLowerCase","SettingsContext","createContext","fetchPlayerToken","a","fetch","then","response","json","token","request","fetchPlayerImg","hash","fetchQuestions","settings","settingsKeys","Object","keys","apiCall","forEach","setting","results","Settings","window","useState","open","setOpen","openBackdrop","setOpenBackdrop","setSettings","setNewSetting","useContext","categories","handleChange","cat","find","Grid","container","direction","mb","mt","SettingsOutlined","noValidate","FormControl","m","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autofocus","Backdrop","Feedback","mx","wrap","spacing","item","px","py","fontStyle","textDecoration","Ranking","lower","greater","SET_PLAYER_INFO","SET_QUESTIONS","SET_SETTINGS","PageButton","fullWidth","PageInput","margin","required","autoComplete","helperText","Link","href","underline","theme","createTheme","palette","default","primary","main","secondary","useStyles","makeStyles","logo","breakpoints","up","dispatch","sendQuestions","payload","setPlayerQuestions","sendPlayer","setPlayerInfo","useHistory","setUser","useEffect","onSubmit","event","preventDefault","emailHash","md5","toString","url","SettingsProvider","children","Provider","newSetting","App","exact","path","Login","game","INITIAL_STATE","userReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb32bdd3.chunk.js","sourcesContent":["/* eslint-disable react/jsx-max-depth */\n/* eslint-disable max-lines */\nimport { CircularProgress, CssBaseline } from '@material-ui/core';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport { Box } from '@material-ui/system';\nimport { Container, Typography, Avatar,\n  Paper, ButtonGroup, Button } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\n\nconst ONE_SECOND = 1000;\nconst ONE_PERCENT = 3.33;\n\nconst styles = () => ({\n  disabledGreen: {\n    '&:disabled': {\n      color: 'black',\n      borderColor: 'black',\n      border: '3px solid black',\n    },\n    background: 'linear-gradient(45deg, #1df401 30%, #1df401 90%)',\n    color: '#1df401',\n  },\n  disabledRed: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  },\n});\n\nexport class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false,\n      timer: 30,\n      questionNumber: 0,\n      PlayerScore: 0,\n      PlayerAssertions: 0,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.setTimer = this.setTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.setTimer();\n    this.updateLocalStorage();\n  }\n\n  componentWillUnmount() {\n    const playerInfo = JSON.parse(localStorage.getItem('state'));\n\n    const player = {\n      name: playerInfo.player.name,\n      score: playerInfo.player.score,\n      picture: playerInfo.player.picture,\n    };\n\n    const getRanking = JSON.parse(localStorage.getItem('ranking'));\n    if (getRanking) {\n      localStorage.setItem('ranking', JSON.stringify([...getRanking, player]));\n    } else localStorage.setItem('ranking', JSON.stringify([player]));\n  }\n\n  handleClick({ target }) {\n    const { timer, questionNumber } = this.state;\n    const { questions } = this.props;\n    const { difficulty } = questions[questionNumber];\n    const baseScore = 10;\n\n    const obj = {\n      easy: 1,\n      medium: 2,\n      hard: 3,\n    };\n\n    if (target.name === 'correct-answer') {\n      this.setState((prevstate) => ({\n        PlayerScore:\n          prevstate.PlayerScore + baseScore + timer * obj[difficulty],\n        PlayerAssertions: prevstate.PlayerAssertions + 1,\n      }));\n    }\n\n    this.setState(\n      {\n        clicked: true,\n      },\n      () => {\n        this.updateLocalStorage();\n      },\n    );\n  }\n\n  setTimer() {\n    this.setState({ timer: 30 });\n    const countdown = setInterval(() => {\n      this.setState(\n        (prevState) => ({\n          timer: prevState.timer - 1,\n        }),\n        () => {\n          const { timer, clicked } = this.state;\n          if (timer <= 0 || clicked) {\n            clearInterval(countdown);\n            this.setState({ clicked: true });\n          }\n        },\n      );\n    }, ONE_SECOND);\n  }\n\n  updateLocalStorage() {\n    const { PlayerAssertions, PlayerScore } = this.state;\n    const { player } = this.props;\n\n    const localStorageObj = {\n      player: {\n        name: player.name,\n        assertions: PlayerAssertions,\n        score: PlayerScore,\n        gravatarEmail: player.email,\n        picture: player.avatar,\n      },\n    };\n\n    localStorage.setItem('state', JSON.stringify(localStorageObj));\n  }\n\n  randomAnswers(questions) {\n    const { questionNumber, clicked } = this.state;\n    const { classes } = this.props;\n    const allQuestions = [\n      questions[questionNumber].correct_answer,\n      ...questions[questionNumber].incorrect_answers,\n    ].sort();\n    return (\n      <ButtonGroup\n        orientation=\"vertical\"\n        variant=\"outlined\"\n        aria-label=\"outlined button group\"\n        sx={ { textAlign: 'center',\n          pb: 5,\n          maxWidth: '100%',\n        } }\n        color=\"primary\"\n      >\n        {allQuestions.map((question, index) => {\n          if (question === questions[questionNumber].correct_answer) {\n            return (\n              <Button\n                type=\"button\"\n                onClick={ this.handleClick }\n                data-testid=\"correct-answer\"\n                disabled={ clicked }\n                id=\"correct\"\n                className={ clicked && classes.disabledGreen }\n                name=\"correct-answer\"\n                key={ index }\n              >\n                {decodeURIComponent(question)}\n              </Button>\n            );\n          }\n          return (\n            <Button\n              type=\"button\"\n              disabled={ clicked }\n              id={ index }\n              className={ clicked && classes.disabledRed }\n              name=\"wrong-answer\"\n              key={ index }\n              data-testid={ `wrong-answer-${index}` }\n              onClick={ this.handleClick }\n            >\n              {decodeURIComponent(question)}\n            </Button>\n          );\n        })}\n      </ButtonGroup>\n    );\n  }\n\n  nextButton(questionNumber) {\n    const { history, questions } = this.props;\n    if (questionNumber < questions.length - 1) {\n      this.setState(\n        (prevState) => ({\n          questionNumber: prevState.questionNumber + 1,\n          clicked: false,\n        }),\n        () => {\n          this.setTimer();\n        },\n      );\n    } else {\n      history.push('/trivia-game/feedback');\n    }\n  }\n\n  circularProgressWithLabel(timer) {\n    return (\n      <Box\n        sx={ {\n          position: 'relative', display: 'inline-flex',\n        } }\n      >\n        <Box\n          sx={ {\n            top: 0,\n            left: 0,\n            bottom: 25,\n            right: 0,\n            position: 'absolute',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          } }\n        >\n          <TimerIcon fontSize=\"20\" />\n        </Box>\n        <CircularProgress\n          variant=\"determinate\"\n          value={ timer * ONE_PERCENT }\n          sx={ { color: '#006600' } }\n          size={ 60 }\n          thickness={ 3 }\n        />\n        <Box\n          sx={ {\n            top: 13,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: 'absolute',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          } }\n        >\n          <Typography\n            sx={ { fontWeight: 600 } }\n            variant=\"h6\"\n            component=\"div\"\n            color=\"text.secondary\"\n          >\n            {timer}\n          </Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  render() {\n    const { player, questions } = this.props;\n    const { timer, questionNumber, PlayerScore, clicked } = this.state;\n\n    return (\n      <Container component=\"main\" maxWidth=\"md\" sx={ { pb: 5 } }>\n        <CssBaseline />\n        <Box\n          sx={ {\n            marginTop: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          } }\n        >\n          <Avatar\n            sx={ { height: 50, width: 60 } }\n            src={ player.avatar }\n            alt=\"Player Image Avatar\"\n          />\n          <Typography variant=\"h6\">\n            {player.name}\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            sx={ { fontWeight: 'regular' } }\n          >\n            {PlayerScore}\n            {' '}\n            Points\n          </Typography>\n          <header>\n            {this.circularProgressWithLabel(timer)}\n          </header>\n          <Paper\n            variant=\"outlined\"\n            sx={ {\n              maxWidth: { xs: '80%' },\n              my: { xs: 1, md: 2 },\n              p: 2,\n              pb: 5,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center' } }\n          >\n            <Paper elevation=\"3\" sx={ { textAlign: 'center', p: 1 } }>\n              <Typography sx={ { fontSize: { xs: 18, md: 20 }, fontWeight: 'bold' } }>\n                {decodeURIComponent(questions[questionNumber].category)}\n              </Typography>\n            </Paper>\n            <Typography\n              variant=\"h6\"\n              component=\"div\"\n              sx={ { pt: 2, pb: 4, fontWeight: 'regular', textAlign: 'center' } }\n              gutterBottom\n            >\n              {decodeURIComponent(questions[questionNumber].question)}\n            </Typography>\n            {this.randomAnswers(questions)}\n            {clicked && (\n              <Button\n                sx={ { justifyContent: 'center',\n                  alignSelf: 'center',\n                  textAlign: 'center' } }\n                variant=\"contained\"\n                data-testid=\"btn-next\"\n                onClick={ () => this.nextButton(questionNumber) }\n              >\n                Next\n              </Button>\n            )}\n          </Paper>\n        </Box>\n      </Container>\n    );\n  }\n}\n\nGame.propTypes = {\n  classes: PropTypes.shape({\n    disabledGreen: PropTypes.string,\n    disabledRed: PropTypes.string,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  player: PropTypes.shape({\n    avatar: PropTypes.string,\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  questions: state.user.questions,\n  player: state.user.player,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Game));\n","import { TextField } from '@material-ui/core';\nimport { MenuItem } from '@mui/material';\nimport React from 'react';\n\nexport default function makeSelect(name, values, handler) {\n  return (\n    <TextField\n      onChange={ handler }\n      select\n      label={ `${name[0].toUpperCase()}${name.substr(1)}` }\n      name={ name }\n      sx={ { minWidth: 300 } }\n    >\n      <MenuItem value=\"All\">\n        All\n      </MenuItem>\n      {name === 'category' ? (\n        values.trivia_categories.map((category) => (\n          <MenuItem key={ category.id } value={ category.name }>\n            {category.name}\n          </MenuItem>\n        ))\n      )\n        : (\n          values.map((value) => (\n            value === 'True/False'\n              ? (\n                <MenuItem key=\"boolean\" value=\"boolean\">\n                  {value}\n                </MenuItem>\n              )\n              : (\n                <MenuItem key={ value } value={ value.toLowerCase() }>\n                  {value}\n                </MenuItem>\n              )\n          ))\n        )}\n    </TextField>\n  );\n}\n","import { createContext } from 'react';\n\nconst SettingsContext = createContext();\n\nexport default SettingsContext;\n","export const fetchPlayerToken = async () => {\n  const request = await fetch('https://opentdb.com/api_token.php?command=request')\n    .then((response) => response.json())\n    .then((token) => token.token);\n  return request;\n};\n\nexport const fetchPlayerImg = async (hash) => {\n  const request = await fetch(`https://www.gravatar.com/avatar/${hash}`);\n  return request;\n};\n\nexport const fetchQuestions = async (token, settings) => {\n  const settingsKeys = Object.keys(settings);\n  let apiCall = 'https://opentdb.com/api.php?amount=5&encode=url3986';\n  settingsKeys.forEach((setting, index) => {\n    if (settings[setting] !== 'All') {\n      apiCall += `&${settingsKeys[index]}=${settings[setting]}`;\n    }\n  });\n  const request = await fetch(`${apiCall}&${token}`)\n    .then((response) => response.json())\n    .then((questions) => questions.results);\n  return request;\n};\n\nexport const fetchCategories = () => fetch('https://opentdb.com/api_category.php')\n  .then((response) => response.json())\n  .then((categories) => localStorage.setItem('categories', JSON.stringify(categories)));\n","import { Button, CircularProgress, Container, CssBaseline, Dialog, DialogActions,\n  DialogContent, DialogContentText,\n  DialogTitle, Typography } from '@material-ui/core';\nimport { Box } from '@material-ui/system';\nimport { SettingsOutlined } from '@mui/icons-material';\nimport { Backdrop, FormControl, Grid } from '@mui/material';\nimport React, { useContext, useState } from 'react';\nimport makeSelect from '../components/select';\nimport SettingsContext from '../context/SettingsContext';\nimport { fetchQuestions } from '../services/apiHelper';\n\nfunction Settings(window) {\n  const [open, setOpen] = useState(false);\n  const [openBackdrop, setOpenBackdrop] = useState(false);\n  const [settings, setSettings] = useState({\n    category: 'All',\n    difficulty: 'All',\n    type: 'All',\n  });\n  const { setNewSetting } = useContext(SettingsContext);\n  const categories = JSON.parse(localStorage.getItem('categories'));\n\n  function handleChange({ target: { name, value } }) {\n    if (name === 'category') {\n      const cat = categories.trivia_categories\n        .find((category) => category.name === value);\n      setSettings({ ...settings,\n        [name]: cat ? cat.id : 'All',\n      });\n    } else {\n      setSettings({ ...settings,\n        [name]: value,\n      });\n    }\n  }\n\n  function redirect() {\n    setOpenBackdrop(true);\n    setNewSetting(settings);\n    const token = localStorage.getItem('token');\n    fetchQuestions(token, settings)\n      .then((questions) => {\n        if (!questions.length) {\n          setOpen(true);\n          setOpenBackdrop(false);\n        } else {\n          window.history.push('/trivia-game');\n        }\n      });\n  }\n\n  const makeDialog = () => (\n    <Dialog\n      open={ open }\n      onClose={ () => setOpen(false) }\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Error: Unable to find questions with the current settings.\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Please change the Category, Difficulty and/or Type.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={ () => setOpen(false) }\n          autofocus\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return (\n    <Container component=\"main\" maxWidth=\"sx\">\n      <CssBaseline />\n      <Box\n        sx={ {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        } }\n      >\n        <Grid\n          container\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          sx={ { mb: 2, mt: -2 } }\n        >\n          <Typography variant=\"h2\">\n            Settings\n          </Typography>\n          <SettingsOutlined sx={ { fontSize: 55 } } />\n        </Grid>\n        <Box component=\"form\" noValidate sx={ { mt: 1 } }>\n          <FormControl sx={ { m: 1, minWidth: 120 } }>\n            {makeSelect('category', categories, handleChange) }\n            <br />\n            {makeSelect('difficulty', ['Easy', 'Medium', 'Hard'], handleChange)}\n            <br />\n            {makeSelect('type', ['Multiple', 'True/False'], handleChange)}\n            <br />\n          </FormControl>\n        </Box>\n        <Button\n          type=\"button\"\n          onClick={ redirect }\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"primary\"\n        >\n          Return\n        </Button>\n      </Box>\n      {makeDialog()}\n      <Backdrop\n        sx={ { color: '#fff' } }\n        open={ openBackdrop }\n        onClick={ () => setOpenBackdrop(false) }\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </Container>\n  );\n}\n\nexport default Settings;\n","/* eslint-disable react/jsx-max-depth */\nimport PropTypes from 'prop-types';\nimport { CssBaseline } from '@material-ui/core';\nimport { Box } from '@material-ui/system';\nimport { Avatar, Button, Container, Grid, Paper, Typography } from '@mui/material';\nimport React, { Component } from 'react';\n\nexport default class Feedback extends Component {\n  render() {\n    const userData = JSON.parse(localStorage.getItem('state'));\n    const NUMBER = 3;\n    const { player } = userData;\n    const { history } = this.props;\n    return (\n      <Container component=\"main\" maxWidth=\"md\" sx={ { pb: 5 } }>\n        <CssBaseline />\n        <Box\n          sx={ {\n            marginTop: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          } }\n        >\n          <Paper sx={ { maxWidth: 400, my: 1, mx: 'auto', p: 2 } }>\n            <Grid container wrap=\"nowrap\" spacing={ 2 }>\n              <Grid item>\n                <Avatar\n                  data-testid=\"header-profile-picture\"\n                  src={ player.picture }\n                  alt=\"avatar\"\n                />\n              </Grid>\n              <Grid item xs>\n                <Typography\n                  sx={ { fontWeight: 'bold', mt: -1 } }\n                  variant=\"h6\"\n                  color=\"text.secondary\"\n                >\n                  {player.name}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper\n            variant=\"outlined\"\n            sx={ {\n              p: 3,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center' } }\n          >\n            <Paper elevation=\"3\" sx={ { textAlign: 'center', p: 1, px: 2 } }>\n              <Typography\n                variant=\"h5\"\n                color=\"text.primary\"\n              >\n                {`Score: ${player.score} points`}\n              </Typography>\n            </Paper>\n            <Typography\n              sx={ { py: 1 } }\n              variant=\"h6\"\n              color=\"text.primary\"\n            >\n              {`Correct answers: ${player.assertions}`}\n            </Typography>\n            <Typography\n              variant=\"body1\"\n              sx={ { py: 1,\n                fontStyle: 'oblique',\n                fontWeight: 'regular',\n                textDecoration: 'underline',\n                fontSize: 18 } }\n            >\n              {player.assertions < NUMBER\n                ? 'You can do better...' : 'Good Job!'}\n            </Typography>\n            <Button\n              variant=\"outlined\"\n              data-testid=\"btn-play-again\"\n              color=\"primary\"\n              onClick={ () => history.push('/trivia-game') }\n              sx={ { my: 1 } }\n            >\n              Play Again\n            </Button>\n            <Button\n              variant=\"contained\"\n              data-testid=\"btn-ranking\"\n              color=\"primary\"\n              onClick={ () => history.push('/trivia-game/ranking') }\n            >\n              Ranking\n            </Button>\n          </Paper>\n        </Box>\n      </Container>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n// import PropTypes from 'prop-types';\n\nexport default class Ranking extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    const getRanking = JSON.parse(localStorage.getItem('ranking'));\n    const { history } = this.props;\n    return (\n      <div>\n        <h2 data-testid=\"ranking-title\">Ranking</h2>\n        <ul>\n          {getRanking\n            && getRanking.sort((lower, greater) => greater.score - lower.score)\n              .map((user, index) => (\n                <li key={ index }>\n                  <span data-testid={ `player-name-${index}` }>{user.name}</span>\n                  <span data-testid={ `player-score-${index}` }>{user.score}</span>\n                </li>\n              ))}\n        </ul>\n        <button\n          type=\"button\"\n          data-testid=\"btn-go-home\"\n          onClick={ () => history.push('/trivia-game') }\n        >\n          Play Again\n        </button>\n      </div>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","export const SET_PLAYER_INFO = 'SET_PLAYER_INFO';\nexport const SET_QUESTIONS = 'SET_QUESTIONS';\nexport const SET_SETTINGS = 'SET_SETTINGS';\n\nexport const setPlayerInfo = (payload) => ({ type: SET_PLAYER_INFO, payload });\nexport const setPlayerQuestions = (payload) => ({ type: SET_QUESTIONS, payload });\nexport const setPlayerSettings = (payload) => ({ type: SET_SETTINGS, payload });\n","export default __webpack_public_path__ + \"static/media/trivia.7e9181d3.png\";","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@material-ui/core';\n\nexport default function PageButton({ name, user, handler }) {\n  return (\n    (\n      <Button\n        type={ name === 'Play' ? 'submit' : 'button' }\n        fullWidth\n        disabled={ name === 'Play' && !user.name }\n        onClick={ () => (name !== 'Play' && handler()) }\n        variant=\"contained\"\n        sx={ { mt: 3, mb: 2 } }\n        color={ name === 'Play' ? 'primary' : 'secondary' }\n      >\n        {name}\n      </Button>)\n  );\n}\n\nPageButton.propTypes = {\n  handler: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n","import { Link, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default function PageInput({ name, handler, value }) {\n  return (\n    <TextField\n      type={ name === 'email' ? 'email' : 'text' }\n      margin=\"normal\"\n      required={ name === 'name' }\n      fullWidth\n      id={ `${name[0].toUpperCase()}${name.substr(1)}` }\n      label={ name === 'email' ? 'Gravatar email:' : 'Name:' }\n      name={ name }\n      autoComplete={ name }\n      onChange={ handler }\n      value={ value }\n      helperText={ name === 'email' && (\n        <Link href=\"https://en.gravatar.com/\" target=\"_blank\" underline=\"always\">\n          Gravatar\n        </Link>\n      ) }\n    />\n  );\n}\n\nPageInput.propTypes = {\n  handler: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import { createTheme } from '@material-ui/core';\n\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: '#fafafa',\n    },\n    primary: {\n      main: '#212121',\n    },\n    secondary: {\n      main: '#9e9e9e',\n    },\n  },\n});\n\nexport default theme;\n","import PropTypes from 'prop-types';\nimport React, { useContext, useEffect, useState } from 'react';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { CircularProgress, Container, CssBaseline } from '@material-ui/core';\nimport { Box } from '@material-ui/system';\nimport { makeStyles } from '@material-ui/styles';\nimport { Backdrop } from '@mui/material';\nimport { setPlayerInfo, setPlayerQuestions } from '../actions';\nimport '../App.css';\nimport logo from '../trivia.png';\nimport { fetchCategories, fetchPlayerImg, fetchPlayerToken,\n  fetchQuestions } from '../services/apiHelper';\nimport SettingsContext from '../context/SettingsContext';\nimport PageButton from '../components/PageButton';\nimport PageInput from '../components/PageInput';\nimport theme from '../theme';\n\nconst useStyles = makeStyles(() => ({\n  logo: {\n    height: '6em',\n    [theme.breakpoints.up('sm')]: {\n      height: '9em',\n    },\n    marginBottom: '1em',\n    animation: 'shake infinite 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both',\n  },\n}));\nfunction Login({ sendQuestions, sendPlayer, player }) {\n  const { settings } = useContext(SettingsContext);\n  const [open, setOpen] = useState(false);\n\n  const categories = JSON.parse(localStorage.getItem('categories'));\n\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [user, setUser] = useState({\n    name: player.name,\n    email: player.email,\n  });\n\n  useEffect(() => {\n    fetchPlayerToken()\n      .then((token) => {\n        localStorage.setItem('token', token);\n      });\n  }, []);\n\n  function handleChange({ target }) {\n    const { name, value } = target;\n    setUser({ ...user, [name]: value });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setOpen(true);\n    const emailHash = md5(user.email).toString();\n    fetchPlayerImg(emailHash).then(({ url }) => {\n      setUser({ ...user, avatar: url });\n      sendPlayer({ ...user, avatar: url });\n    });\n    fetchQuestions(localStorage.getItem('token'), settings)\n      .then((questions) => {\n        sendQuestions(questions);\n        history.push('/trivia-game/game');\n      });\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={ {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        } }\n      >\n        <img src={ logo } className={ classes.logo } alt=\"logo\" />\n        <Box\n          component=\"form\"\n          onSubmit={ handleSubmit }\n          sx={ { mt: 1 } }\n        >\n          <PageInput name=\"name\" value={ user.name } handler={ handleChange } />\n          <PageInput name=\"email\" value={ user.email } handler={ handleChange } />\n          <PageButton name=\"Play\" user={ user } />\n          <PageButton\n            name=\"Settings\"\n            user={ user }\n            handler={ () => {\n              setOpen(true);\n              if (!categories) {\n                fetchCategories()\n                  .then(() => {\n                    history.push('/trivia-game/settings');\n                  });\n              } else {\n                history.push('/trivia-game/settings');\n              }\n            } }\n          />\n        </Box>\n      </Box>\n      <Backdrop\n        sx={ { color: '#fff' } }\n        open={ open }\n        onClick={ () => setOpen(false) }\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </Container>\n  );\n}\n\nconst mapStateToProps = ({ user: { player } }) => ({\n  player,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendQuestions: (payload) => dispatch(setPlayerQuestions(payload)),\n  sendPlayer: (payload) => dispatch(setPlayerInfo(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  player: PropTypes.shape({\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n  sendPlayer: PropTypes.func.isRequired,\n  sendQuestions: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport SettingsContext from './SettingsContext';\n\nfunction SettingsProvider({ children }) {\n  const [settings, setSettings] = useState({\n    category: 'All',\n    difficulty: 'All',\n    type: 'All',\n  });\n\n  function setNewSetting(newSetting) {\n    setSettings(newSetting);\n  }\n\n  return (\n    <SettingsContext.Provider\n      value={ { settings, setNewSetting } }\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n}\n\nSettingsProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default SettingsProvider;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport game from './pages/Game';\nimport settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport Login from './pages/Login';\nimport SettingsProvider from './context/SettingsProvider';\n\nexport default function App() {\n  return (\n    <SettingsProvider>\n      <Switch>\n        <Route exact path=\"/trivia-game\" component={ Login } />\n        <Route path=\"/trivia-game/game\" component={ game } />\n        <Route path=\"/trivia-game/settings\" component={ settings } />\n        <Route path=\"/trivia-game/feedback\" component={ Feedback } />\n        <Route path=\"/trivia-game/ranking\" component={ Ranking } />\n      </Switch>\n    </SettingsProvider>\n  );\n}\n","import { SET_PLAYER_INFO, SET_QUESTIONS, SET_SETTINGS } from '../actions';\n\nconst INITIAL_STATE = {\n  player: {\n    name: '',\n    email: '',\n  },\n  questions: '',\n  settings: {\n    category: 'All',\n    difficulty: 'All',\n    type: 'All',\n  },\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_PLAYER_INFO:\n    return { ...state, player: action.payload };\n  case SET_QUESTIONS:\n    return { ...state, questions: action.payload };\n  case SET_SETTINGS:\n    return { ...state, settings: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\n\nconst rootReducer = combineReducers({ user });\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@emotion/react';\nimport App from './App';\n\nimport store from './store';\n\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <ThemeProvider theme={ theme }>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}