{"version":3,"sources":["pages/Game.js","components/select.js","context/SettingsContext.js","services/apiHelper.js","pages/Settings.js","pages/Feedback.js","pages/Ranking.js","actions/index.js","trivia.png","components/PageButton.jsx","components/PageInput.jsx","theme.js","components/Footer.jsx","pages/Login.js","context/SettingsProvider.js","App.js","reducers/user.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["Game","props","state","clicked","timer","questionNumber","PlayerScore","PlayerAssertions","handleClick","bind","setTimer","this","updateLocalStorage","playerInfo","JSON","parse","localStorage","getItem","player","name","score","picture","getRanking","setItem","stringify","target","difficulty","questions","obj","easy","medium","hard","setState","prevstate","countdown","setInterval","prevState","clearInterval","localStorageObj","assertions","gravatarEmail","email","avatar","classes","allQuestions","correct_answer","incorrect_answers","sort","Box","sx","display","flexDirection","map","question","index","Button","variant","my","onClick","disabled","id","className","disabledGreen","decodeURIComponent","type","disabledRed","history","length","push","position","top","left","bottom","right","alignItems","justifyContent","fontSize","CircularProgress","value","color","size","thickness","Typography","fontWeight","component","Container","maxWidth","pb","CssBaseline","marginTop","Avatar","height","width","src","alt","circularProgressWithLabel","Paper","xs","md","p","elevation","textAlign","category","py","gutterBottom","randomAnswers","mt","nextButton","style","backgroundColor","borderColor","pt","React","Component","connect","user","withStyles","border","background","makeSelect","values","handler","TextField","onChange","select","label","toUpperCase","substr","minWidth","MenuItem","trivia_categories","toLowerCase","SettingsContext","createContext","fetchPlayerToken","a","fetch","then","response","json","token","request","fetchPlayerImg","hash","fetchQuestions","settings","settingsKeys","Object","keys","apiCall","forEach","setting","results","Settings","useHistory","useState","open","setOpen","openBackdrop","setOpenBackdrop","setSettings","setNewSetting","useContext","categories","handleChange","cat","find","Grid","container","direction","mb","SettingsOutlined","noValidate","FormControl","m","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autofocus","Backdrop","Feedback","mx","spacing","item","px","sm","fontStyle","textDecoration","Ranking","EmojiEventsTwoTone","List","lower","greater","ListItem","ListItemText","ListItemAvatar","ml","primary","secondary","Divider","SET_PLAYER_INFO","SET_QUESTIONS","SET_SETTINGS","PageButton","fullWidth","defaultProps","undefined","PageInput","margin","required","autoComplete","helperText","Link","href","underline","theme","createTheme","palette","default","main","Footer","align","Login","handleSubmit","prevValue","event","sendQuestions","sendPlayer","preventDefault","emailHash","md5","toString","url","currentState","backDrop","logo","onSubmit","dispatch","payload","setPlayerQuestions","setPlayerInfo","breakpoints","up","SettingsProvider","children","Provider","newSetting","App","exact","path","game","INITIAL_STATE","userReducer","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","window","Cypress","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.780aa337.chunk.js","sourcesContent":["/* eslint-disable react/jsx-max-depth */\n/* eslint-disable max-lines */\nimport { CircularProgress, CssBaseline } from '@material-ui/core';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport { Box } from '@material-ui/system';\nimport { Container, Typography, Avatar,\n  Paper, Button } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\n\nconst ONE_SECOND = 1000;\nconst ONE_PERCENT = 3.33;\n\nconst styles = () => ({\n  disabledGreen: {\n    '&:disabled': {\n      borderColor: 'black !important',\n      border: '3px solid black !important',\n      background: 'linear-gradient(45deg, #1df401 30%, #1df401 90%)',\n      color: '#212121 !important',\n    },\n  },\n  disabledRed: {\n    '&:disabled': {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    },\n  },\n});\n\nexport class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false,\n      timer: 30,\n      questionNumber: 0,\n      PlayerScore: 0,\n      PlayerAssertions: 0,\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.setTimer = this.setTimer.bind(this);\n  }\n\n  componentDidMount() {\n    this.setTimer();\n    this.updateLocalStorage();\n  }\n\n  componentWillUnmount() {\n    const playerInfo = JSON.parse(localStorage.getItem('state'));\n\n    const player = {\n      name: playerInfo.player.name,\n      score: playerInfo.player.score,\n      picture: playerInfo.player.picture,\n    };\n\n    const getRanking = JSON.parse(localStorage.getItem('ranking'));\n    if (getRanking) {\n      localStorage.setItem('ranking', JSON.stringify([...getRanking, player]));\n    } else localStorage.setItem('ranking', JSON.stringify([player]));\n  }\n\n  handleClick({ target }) {\n    const { timer, questionNumber } = this.state;\n    const { questions } = this.props;\n    const { difficulty } = questions[questionNumber];\n    const baseScore = 10;\n\n    const obj = {\n      easy: 1,\n      medium: 2,\n      hard: 3,\n    };\n    this.setState({ clicked: true });\n\n    if (target.name === 'correct-answer') {\n      this.setState((prevstate) => ({\n        PlayerScore:\n          prevstate.PlayerScore + baseScore + timer * obj[difficulty],\n        PlayerAssertions: prevstate.PlayerAssertions + 1,\n      }), () => {\n        this.updateLocalStorage();\n      });\n    }\n  }\n\n  setTimer() {\n    this.setState({ timer: 30 });\n    const countdown = setInterval(() => {\n      this.setState(\n        (prevState) => ({\n          timer: prevState.timer - 1,\n        }),\n        () => {\n          const { timer, clicked } = this.state;\n          if (timer <= 0 || clicked) {\n            clearInterval(countdown);\n            this.setState({ clicked: true });\n          }\n        },\n      );\n    }, ONE_SECOND);\n  }\n\n  updateLocalStorage() {\n    const { PlayerAssertions, PlayerScore } = this.state;\n    const { player } = this.props;\n\n    const localStorageObj = {\n      player: {\n        name: player.name,\n        assertions: PlayerAssertions,\n        score: PlayerScore,\n        gravatarEmail: player.email,\n        picture: player.avatar,\n      },\n    };\n    localStorage.setItem('state', JSON.stringify(localStorageObj));\n  }\n\n  randomAnswers(questions) {\n    const { questionNumber, clicked } = this.state;\n    const { classes } = this.props;\n    const allQuestions = [\n      questions[questionNumber].correct_answer,\n      ...questions[questionNumber].incorrect_answers,\n    ].sort();\n    return (\n      <Box\n        sx={ {\n          display: 'flex',\n          flexDirection: 'column',\n        } }\n      >\n        {allQuestions.map((question, index) => {\n          if (question === questions[questionNumber].correct_answer) {\n            return (\n              <Button\n                name=\"correct-answer\"\n                variant=\"outlined\"\n                sx={ { my: 1 } }\n                onClick={ this.handleClick }\n                data-testid=\"correct-answer\"\n                disabled={ clicked }\n                id=\"correct\"\n                className={ classes.disabledGreen }\n                key={ index }\n              >\n                {decodeURIComponent(question)}\n              </Button>\n            );\n          }\n          return (\n            <Button\n              variant=\"outlined\"\n              sx={ { my: 1 } }\n              type=\"button\"\n              disabled={ clicked }\n              id={ index }\n              className={ classes.disabledRed }\n              key={ index }\n              data-testid={ `wrong-answer-${index}` }\n              onClick={ this.handleClick }\n            >\n              {decodeURIComponent(question)}\n            </Button>\n          );\n        })}\n      </Box>\n    );\n  }\n\n  nextButton(questionNumber) {\n    const { history, questions } = this.props;\n    if (questionNumber < questions.length - 1) {\n      this.setState(\n        (prevState) => ({\n          questionNumber: prevState.questionNumber + 1,\n          clicked: false,\n        }),\n        () => {\n          this.setTimer();\n        },\n      );\n    } else {\n      history.push('/trivia-game/feedback');\n    }\n  }\n\n  circularProgressWithLabel(timer) {\n    return (\n      <Box\n        sx={ {\n          position: 'relative', display: 'inline-flex',\n        } }\n      >\n        <Box\n          sx={ {\n            top: 0,\n            left: 0,\n            bottom: 25,\n            right: 0,\n            position: 'absolute',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          } }\n        >\n          <TimerIcon sx={ { fontSize: 20 } } />\n        </Box>\n        <CircularProgress\n          variant=\"determinate\"\n          value={ timer * ONE_PERCENT }\n          sx={ { color: '#006600' } }\n          size={ 70 }\n          thickness={ 3 }\n        />\n        <Box\n          sx={ {\n            top: 22,\n            left: 0,\n            bottom: 0,\n            right: 0,\n            position: 'absolute',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          } }\n        >\n          <Typography\n            sx={ { fontWeight: 600, fontSize: 26 } }\n            variant=\"h6\"\n            component=\"div\"\n            color=\"text.secondary\"\n          >\n            {timer}\n          </Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  render() {\n    const { player, questions } = this.props;\n    const { timer, questionNumber, PlayerScore, clicked } = this.state;\n\n    return (\n      <Container component=\"main\" maxWidth=\"md\" sx={ { pb: 5 } }>\n        <CssBaseline />\n        <Box\n          sx={ {\n            marginTop: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          } }\n        >\n          <Avatar\n            sx={ { height: 50, width: 60 } }\n            src={ player.avatar }\n            alt=\"Player Image Avatar\"\n          />\n          <Typography variant=\"h6\">\n            {player.name}\n          </Typography>\n          <Typography\n            variant=\"h6\"\n            sx={ { fontWeight: 'regular' } }\n          >\n            {PlayerScore}\n            {' '}\n            Points\n          </Typography>\n          {this.circularProgressWithLabel(timer)}\n          <Paper\n            variant=\"outlined\"\n            sx={ {\n              maxWidth: { xs: '80%' },\n              my: { xs: 1, md: 2 },\n              p: 2,\n              pb: 5,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center' } }\n          >\n            <Paper elevation=\"3\" sx={ { textAlign: 'center', p: 1 } }>\n              <Typography sx={ { fontSize: { xs: 18, md: 20 }, fontWeight: 'bold' } }>\n                {decodeURIComponent(questions[questionNumber].category)}\n              </Typography>\n            </Paper>\n            <Typography\n              variant=\"h6\"\n              sx={ { py: 3, fontWeight: 'regular', textAlign: 'center' } }\n              gutterBottom\n            >\n              {decodeURIComponent(questions[questionNumber].question)}\n            </Typography>\n            {this.randomAnswers(questions)}\n            {clicked && (\n              <Button\n                sx={ { mt: 2 } }\n                variant=\"contained\"\n                data-testid=\"btn-next\"\n                onClick={ () => this.nextButton(questionNumber) }\n              >\n                Next\n              </Button>\n            )}\n          </Paper>\n        </Box>\n        <hr\n          style={ {\n            color: '#000000',\n            backgroundColor: '#000000',\n            width: '80%',\n            borderColor: '#000000',\n          } }\n        />\n        <Typography\n          variant=\"h6\"\n          component=\"div\"\n          sx={ { pt: 2, pb: 4, fontWeight: 'regular', textAlign: 'center' } }\n          gutterBottom\n        >\n          {`${questionNumber + 1}/5`}\n        </Typography>\n      </Container>\n    );\n  }\n}\n\nGame.propTypes = {\n  classes: PropTypes.shape({\n    disabledGreen: PropTypes.string,\n    disabledRed: PropTypes.string,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  player: PropTypes.shape({\n    avatar: PropTypes.string,\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  questions: state.user.questions,\n  player: state.user.player,\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Game));\n","import { TextField } from '@material-ui/core';\nimport { MenuItem } from '@mui/material';\nimport React from 'react';\n\nexport default function makeSelect(name, values, handler) {\n  return (\n    <TextField\n      onChange={ handler }\n      select\n      label={ `${name[0].toUpperCase()}${name.substr(1)}` }\n      name={ name }\n      sx={ { minWidth: 300 } }\n    >\n      <MenuItem value=\"All\">\n        All\n      </MenuItem>\n      {name === 'category' ? (\n        values.trivia_categories.map((category) => (\n          <MenuItem key={ category.id } value={ category.name }>\n            {category.name}\n          </MenuItem>\n        ))\n      )\n        : (\n          values.map((value) => (\n            value === 'True/False'\n              ? (\n                <MenuItem key=\"boolean\" value=\"boolean\">\n                  {value}\n                </MenuItem>\n              )\n              : (\n                <MenuItem key={ value } value={ value.toLowerCase() }>\n                  {value}\n                </MenuItem>\n              )\n          ))\n        )}\n    </TextField>\n  );\n}\n","import { createContext } from 'react';\n\nconst SettingsContext = createContext();\n\nexport default SettingsContext;\n","export const fetchPlayerToken = async () => {\n  const request = await fetch('https://opentdb.com/api_token.php?command=request')\n    .then((response) => response.json())\n    .then((token) => token.token);\n  return request;\n};\n\nexport const fetchPlayerImg = async (hash) => {\n  const request = await fetch(`https://www.gravatar.com/avatar/${hash}`);\n  return request;\n};\n\nexport const fetchQuestions = async (token, settings) => {\n  const settingsKeys = Object.keys(settings);\n  let apiCall = 'https://opentdb.com/api.php?amount=5&encode=url3986';\n  settingsKeys.forEach((setting, index) => {\n    if (settings[setting] !== 'All') {\n      apiCall += `&${settingsKeys[index]}=${settings[setting]}`;\n    }\n  });\n  const request = await fetch(`${apiCall}&${token}`)\n    .then((response) => response.json())\n    .then((questions) => questions.results);\n  return request;\n};\n\nexport const fetchCategories = () => fetch('https://opentdb.com/api_category.php')\n  .then((response) => response.json())\n  .then((categories) => localStorage.setItem('categories', JSON.stringify(categories)));\n","import { Button, CircularProgress, Container, CssBaseline, Dialog, DialogActions,\n  DialogContent, DialogContentText,\n  DialogTitle, Typography } from '@material-ui/core';\nimport { Box } from '@material-ui/system';\nimport { SettingsOutlined } from '@mui/icons-material';\nimport { Backdrop, FormControl, Grid } from '@mui/material';\nimport React, { useContext, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport makeSelect from '../components/select';\nimport SettingsContext from '../context/SettingsContext';\nimport { fetchQuestions } from '../services/apiHelper';\n\nfunction Settings() {\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [openBackdrop, setOpenBackdrop] = useState(false);\n  const [settings, setSettings] = useState({\n    category: 'All',\n    difficulty: 'All',\n    type: 'All',\n  });\n  const { setNewSetting } = useContext(SettingsContext);\n  const categories = JSON.parse(localStorage.getItem('categories'));\n\n  function handleChange({ target: { name, value } }) {\n    if (name === 'category') {\n      const cat = categories.trivia_categories\n        .find((category) => category.name === value);\n      setSettings({ ...settings,\n        [name]: cat ? cat.id : 'All',\n      });\n    } else {\n      setSettings({ ...settings,\n        [name]: value,\n      });\n    }\n  }\n\n  function redirect() {\n    setOpenBackdrop(true);\n    setNewSetting(settings);\n    const token = localStorage.getItem('token');\n    fetchQuestions(token, settings)\n      .then((questions) => {\n        if (!questions.length) {\n          setOpen(true);\n          setOpenBackdrop(false);\n        } else {\n          history.push('/trivia-game');\n        }\n      });\n  }\n\n  const makeDialog = () => (\n    <Dialog\n      open={ open }\n      onClose={ () => setOpen(false) }\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        Error: Unable to find questions with the current settings.\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          Please change the Category, Difficulty and/or Type.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={ () => setOpen(false) }\n          autofocus\n        >\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return (\n    <Container component=\"main\">\n      <CssBaseline />\n      <Box\n        sx={ {\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        } }\n      >\n        <Grid\n          container\n          direction=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          sx={ { mb: 2, mt: -2 } }\n        >\n          <Typography variant=\"h2\">\n            Settings\n          </Typography>\n          <SettingsOutlined sx={ { fontSize: 55 } } />\n        </Grid>\n        <Box component=\"form\" noValidate sx={ { mt: 1 } }>\n          <FormControl sx={ { m: 1, minWidth: 120 } }>\n            {makeSelect('category', categories, handleChange) }\n            <br />\n            {makeSelect('difficulty', ['Easy', 'Medium', 'Hard'], handleChange)}\n            <br />\n            {makeSelect('type', ['Multiple', 'True/False'], handleChange)}\n            <br />\n          </FormControl>\n        </Box>\n        <Button\n          type=\"button\"\n          onClick={ redirect }\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"primary\"\n        >\n          Return\n        </Button>\n      </Box>\n      {makeDialog()}\n      <Backdrop\n        sx={ { color: '#fff' } }\n        open={ openBackdrop }\n        onClick={ () => setOpenBackdrop(false) }\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </Container>\n  );\n}\n\nexport default Settings;\n","/* eslint-disable react/jsx-max-depth */\nimport PropTypes from 'prop-types';\nimport { CssBaseline } from '@material-ui/core';\nimport { Box } from '@material-ui/system';\nimport { Avatar, Button, Container, Grid, Paper, Typography } from '@mui/material';\nimport React, { Component } from 'react';\n\nexport default class Feedback extends Component {\n  render() {\n    const userData = JSON.parse(localStorage.getItem('state'));\n    const THREE_QUESTIONS = 3;\n    const { player } = userData;\n    const { history } = this.props;\n    return (\n      <Container component=\"main\" maxWidth=\"md\" sx={ { pb: 5 } }>\n        <CssBaseline />\n        <Box\n          sx={ {\n            marginTop: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          } }\n        >\n          <Paper sx={ { maxWidth: 400, my: 1, mx: 'auto', p: 2 } }>\n            <Grid container spacing={ 2 }>\n              <Grid item>\n                <Avatar\n                  data-testid=\"header-profile-picture\"\n                  src={ player.picture }\n                  alt=\"avatar\"\n                />\n              </Grid>\n              <Grid item xs>\n                <Typography\n                  sx={ { fontWeight: 'bold' } }\n                  variant=\"h6\"\n                  color=\"text.secondary\"\n                >\n                  {player.name}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n          <Paper\n            variant=\"outlined\"\n            sx={ {\n              p: 3,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center' } }\n          >\n            <Paper elevation=\"3\" sx={ { textAlign: 'center', p: 1, px: 2 } }>\n              <Typography\n                variant=\"h5\"\n                color=\"text.primary\"\n              >\n                {`Score: ${player.score} points`}\n              </Typography>\n            </Paper>\n            <Typography\n              sx={ { pt: 2,\n                pb: 1,\n                fontSize: {\n                  xs: 16,\n                  sm: 'h6.fontSize',\n                },\n                fontWeight: 'regular' } }\n              color=\"text.primary\"\n            >\n              {`You scored ${player.assertions} out of 5 questions`}\n            </Typography>\n            {player.assertions >= THREE_QUESTIONS\n                && (\n                  <Typography\n                    sx={ { mb: 2,\n                      fontStyle: 'oblique',\n                      fontWeight: 'regular',\n                      textDecoration: 'underline',\n                      fontSize: {\n                        xs: 18,\n                        sm: 'h6.fontSize',\n                      } } }\n                  >\n                    Good Job!\n                  </Typography>\n                )}\n            <Button\n              variant=\"outlined\"\n              data-testid=\"btn-play-again\"\n              color=\"primary\"\n              onClick={ () => history.push('/trivia-game') }\n              sx={ { mb: 1 } }\n            >\n              Play Again\n            </Button>\n            <Button\n              variant=\"contained\"\n              data-testid=\"btn-ranking\"\n              color=\"primary\"\n              onClick={ () => history.push('/trivia-game/ranking') }\n            >\n              Ranking\n            </Button>\n          </Paper>\n        </Box>\n      </Container>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","import { CssBaseline, ListItemAvatar, ListItemText } from '@material-ui/core';\nimport { Box } from '@material-ui/system';\nimport { Avatar, Button, Container, Divider,\n  Grid, List, ListItem, Paper, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { EmojiEventsTwoTone } from '@mui/icons-material';\n\nexport default class Ranking extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    const TOP_10 = 10;\n    const getRanking = JSON.parse(localStorage.getItem('ranking'));\n    const { history } = this.props;\n    return (\n      <Container component=\"main\">\n        <CssBaseline />\n        <Box\n          sx={ {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            mb: 5,\n          } }\n        >\n          <Grid\n            container\n            direction=\"row\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            sx={ { py: 2 } }\n          >\n            <Typography variant=\"h3\" sx={ { fontSize: 40, fontWeight: 'regular' } }>\n              Leaderboard\n            </Typography>\n            <EmojiEventsTwoTone sx={ { fontSize: 55 } } />\n          </Grid>\n          <Paper\n            variant=\"outlined\"\n            sx={ {\n              px: 1,\n              pb: 3,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center' } }\n          >\n            <List sx={ { mb: 2 } }>\n              {getRanking\n            && getRanking.sort((lower, greater) => greater.score - lower.score)\n              .map((user, index) => (\n                index < TOP_10 && (\n                  <>\n                    <ListItem key={ index }>\n                      <ListItemText>\n                        <Typography sx={ { fontWeight: '600' } }>\n                          {index + 1}\n                        </Typography>\n                      </ListItemText>\n                      <ListItemAvatar sx={ { ml: 1 } }>\n                        <Avatar\n                          sx={ { width: 45, height: 45 } }\n                          src={ user.picture }\n                        />\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={ user.name }\n                        secondary={\n                          <Typography\n                            sx={ { display: 'inline', fontWeight: 'bold' } }\n                            component=\"span\"\n                            variant=\"body2\"\n                            color=\"text.primary\"\n                          >\n                            {user.score}\n                            {' '}\n                            Points\n                          </Typography>\n                        }\n                      />\n                    </ListItem>\n                    <Divider component=\"li\" />\n                  </>)\n              ))}\n            </List>\n            <Button\n              variant=\"contained\"\n              type=\"button\"\n              data-testid=\"btn-go-home\"\n              onClick={ () => history.push('/trivia-game') }\n            >\n              Play Again\n            </Button>\n          </Paper>\n        </Box>\n      </Container>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n","export const SET_PLAYER_INFO = 'SET_PLAYER_INFO';\nexport const SET_QUESTIONS = 'SET_QUESTIONS';\nexport const SET_SETTINGS = 'SET_SETTINGS';\n\nexport const setPlayerInfo = (payload) => ({ type: SET_PLAYER_INFO, payload });\nexport const setPlayerQuestions = (payload) => ({ type: SET_QUESTIONS, payload });\nexport const setPlayerSettings = (payload) => ({ type: SET_SETTINGS, payload });\n","export default __webpack_public_path__ + \"static/media/trivia.7e9181d3.png\";","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@material-ui/core';\n\nexport default function PageButton({ name, user, handler }) {\n  return (\n    (\n      <Button\n        type={ name === 'Play' ? 'submit' : 'button' }\n        fullWidth\n        disabled={ name === 'Play' && !user.name }\n        onClick={ handler }\n        variant=\"contained\"\n        sx={ { my: 2 } }\n        color={ name === 'Play' ? 'primary' : 'secondary' }\n      >\n        {name}\n      </Button>)\n  );\n}\n\nPageButton.propTypes = {\n  handler: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nPageButton.defaultProps = {\n  handler: undefined,\n};\n","import { Link, TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default function PageInput({ name, handler, value }) {\n  return (\n    <TextField\n      type={ name === 'email' ? 'email' : 'text' }\n      margin=\"normal\"\n      required={ name === 'name' }\n      fullWidth\n      id={ `${name[0].toUpperCase()}${name.substr(1)}` }\n      label={ name === 'email' ? 'Gravatar email:' : 'Name:' }\n      name={ name }\n      autoComplete={ name }\n      onChange={ handler }\n      value={ value }\n      helperText={ name === 'email' && (\n        <Link href=\"https://en.gravatar.com/\" target=\"_blank\" underline=\"always\">\n          Gravatar\n        </Link>\n      ) }\n    />\n  );\n}\n\nPageInput.propTypes = {\n  handler: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import { createTheme } from '@material-ui/core';\n\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: '#fafafa',\n    },\n    primary: {\n      main: '#212121',\n    },\n    secondary: {\n      main: '#9e9e9e',\n    },\n  },\n});\n\nexport default theme;\n","import { Link, Typography } from '@mui/material';\nimport React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer>\n      <hr />\n      <Typography\n        sx={ { mt: 2, pb: 2 } }\n        variant=\"body2\"\n        color=\"text.secondary\"\n        align=\"center\"\n      >\n        {'© '}\n        <Link color=\"text.primary\" target=\"_blank\" href=\"https://github.com/matheuspor\">\n          matheuspor\n        </Link>\n        {' 2021'}\n      </Typography>\n    </footer>\n  );\n}\n","import PropTypes from 'prop-types';\nimport React\n  from 'react';\nimport md5 from 'crypto-js/md5';\nimport { connect } from 'react-redux';\nimport { CircularProgress, Container, CssBaseline } from '@material-ui/core';\nimport { Box } from '@material-ui/system';\nimport { Backdrop } from '@mui/material';\nimport { withStyles } from '@material-ui/styles';\nimport { setPlayerInfo, setPlayerQuestions } from '../actions';\nimport '../App.css';\nimport logo from '../trivia.png';\nimport { fetchCategories, fetchPlayerImg, fetchPlayerToken,\n  fetchQuestions } from '../services/apiHelper';\nimport PageButton from '../components/PageButton';\nimport PageInput from '../components/PageInput';\nimport theme from '../theme';\nimport Footer from '../components/Footer';\n\nconst styles = () => ({\n  logo: {\n    height: '6em',\n    [theme.breakpoints.up('sm')]: {\n      height: '9em',\n    },\n    mb: '1em',\n    animation: 'shake infinite 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both',\n  },\n});\n\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    const { player: { name, email } } = this.props;\n    this.state = {\n      user: {\n        name,\n        email,\n      },\n      open: true,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    fetchPlayerToken()\n      .then((token) => {\n        fetchCategories();\n        localStorage.setItem('token', token);\n      })\n      .then(() => this.setState({ open: false }));\n  }\n\n  handleChange({ target }) {\n    const { name, value } = target;\n    this.setState((prevValue) => ({\n      user: {\n        ...prevValue.user,\n        [name]: value,\n      },\n    }));\n  }\n\n  handleSubmit(event) {\n    const { sendQuestions, sendPlayer, settings, history } = this.props;\n    const { user } = this.state;\n    event.preventDefault();\n    this.setState({ open: true });\n    const emailHash = md5(user.email).toString();\n\n    fetchPlayerImg(emailHash)\n      .then(({ url }) => {\n        this.setState((prevState) => ({\n          user: {\n            ...prevState.user,\n            avatar: url,\n          },\n        }), () => {\n          const currentState = this.state;\n          sendPlayer(currentState.user);\n        });\n      });\n\n    fetchQuestions(localStorage.getItem('token'), settings)\n      .then((questions) => {\n        sendQuestions(questions);\n        history.push('/trivia-game/game');\n      });\n  }\n\n  backDrop(open) {\n    return (\n      <Backdrop\n        sx={ { color: '#fff' } }\n        open={ open }\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>);\n  }\n\n  render() {\n    const { history, classes } = this.props;\n    const { user, open } = this.state;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        {this.backDrop(open)}\n        <Box\n          sx={ {\n            mt: 6,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          } }\n        >\n          <img src={ logo } className={ classes.logo } alt=\"logo\" />\n          <Box\n            component=\"form\"\n            onSubmit={ this.handleSubmit }\n            sx={ { mt: 2 } }\n          >\n            <PageInput\n              name=\"name\"\n              value={ user.name }\n              handler={ this.handleChange }\n            />\n            <PageInput\n              name=\"email\"\n              value={ user.email }\n              handler={ this.handleChange }\n            />\n            <PageButton\n              name=\"Play\"\n              user={ user }\n            />\n            <PageButton\n              name=\"Settings\"\n              user={ user }\n              handler={ () => history.push('/trivia-game/settings') }\n            />\n          </Box>\n        </Box>\n        <Footer />\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user: { player, settings } }) => ({\n  player,\n  settings,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendQuestions: (payload) => dispatch(setPlayerQuestions(payload)),\n  sendPlayer: (payload) => dispatch(setPlayerInfo(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Login));\n\nLogin.propTypes = {\n  classes: PropTypes.shape({\n    logo: PropTypes.string,\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n  player: PropTypes.shape({\n    email: PropTypes.string,\n    name: PropTypes.string,\n  }).isRequired,\n  sendPlayer: PropTypes.func.isRequired,\n  sendQuestions: PropTypes.func.isRequired,\n  settings: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport SettingsContext from './SettingsContext';\n\nfunction SettingsProvider({ children }) {\n  const [settings, setSettings] = useState({\n    category: 'All',\n    difficulty: 'All',\n    type: 'All',\n  });\n\n  function setNewSetting(newSetting) {\n    setSettings(newSetting);\n  }\n\n  return (\n    <SettingsContext.Provider\n      value={ { settings, setNewSetting } }\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n}\n\nSettingsProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default SettingsProvider;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport game from './pages/Game';\nimport settings from './pages/Settings';\nimport Feedback from './pages/Feedback';\nimport Ranking from './pages/Ranking';\nimport Login from './pages/Login';\nimport SettingsProvider from './context/SettingsProvider';\n\nexport default function App() {\n  return (\n    <SettingsProvider>\n      <Switch>\n        <Route exact path=\"/trivia-game\" component={ Login } />\n        <Route path=\"/trivia-game/game\" component={ game } />\n        <Route path=\"/trivia-game/settings\" component={ settings } />\n        <Route path=\"/trivia-game/feedback\" component={ Feedback } />\n        <Route path=\"/trivia-game/ranking\" component={ Ranking } />\n      </Switch>\n    </SettingsProvider>\n  );\n}\n","import { SET_PLAYER_INFO, SET_QUESTIONS, SET_SETTINGS } from '../actions';\n\nconst INITIAL_STATE = {\n  player: {\n    name: '',\n    email: '',\n  },\n  questions: '',\n  settings: {\n    category: 'All',\n    difficulty: 'All',\n    type: 'All',\n  },\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_PLAYER_INFO:\n    return { ...state, player: action.payload };\n  case SET_QUESTIONS:\n    return { ...state, questions: action.payload };\n  case SET_SETTINGS:\n    return { ...state, settings: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\n\nconst rootReducer = combineReducers({ user });\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from '@emotion/react';\nimport App from './App';\n\nimport store from './store';\n\nimport * as serviceWorker from './serviceWorker';\nimport theme from './theme';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <ThemeProvider theme={ theme }>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}